services:
  # PostgreSQL database service
  db:
    image: postgres:16
    container_name: lms_db
    environment:
      POSTGRES_USER: lms_user
      POSTGRES_PASSWORD: lms_password
      POSTGRES_DB: lms_db
    networks:
      - lms_network
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: always
  # PGAdmin service for database management
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: lmcervantessuarez@gmail.com
      PGADMIN_DEFAULT_PASSWORD: edqnLMCSf31.
    ports:
      - "5050:80"
    networks:
      - lms_network
    depends_on:
      - db
  # Redis service for caching
  redis:
    image: redis:alpine
    container_name: lms_redis
    networks:
      - lms_network
    ports:
      - "6379:6379"
    restart: always
  # Full Stack Web Application
  django:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lms_django
    networks:
      - lms_network
    ports:
      - "8080:8080"
    command:
      ["uvicorn", "lms.asgi:application", "--host", "0.0.0.0", "--port", "8080"]
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    restart: always
  # Celery worker for background tasks
  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lms_celery
    networks:
      - lms_network
    command: ["celery", "-A", "lms", "worker", "--loglevel=info"]
    volumes:
      - .:/app
    depends_on:
      - redis
    restart: always
  nginx:
    image: nginx:alpine
    container_name: lms_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - .:/app
    depends_on:
      - django
    networks:
      - lms_network
    restart: always
volumes:
  db_data:
networks:
  lms_network:
    driver: bridge
    name: lms_network
